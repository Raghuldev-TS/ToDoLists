{"version":3,"sources":["components/ToDoItem.jsx","components/InputArea.jsx","components/App.jsx","index.js"],"names":["ToDoItem","props","text","onClick","onChecked","id","InputArea","className","onChange","handleChange","type","value","addItem","App","useState","inputText","setInputText","items","setItems","deleteItem","prevItems","filter","item","index","event","newValue","target","map","todoItem","key","ReactDOM","render","document","getElementById"],"mappings":"iOAiBeA,MAff,SAAkBC,GAChB,OACE,6BACE,4BAAKA,EAAMC,KACX,kBAAC,IAAD,CACIC,QAAS,KACPF,EAAMG,UAAUH,EAAMI,UCKnBC,MAXf,SAAmBL,GACjB,OACE,yBAAKM,UAAU,QACb,2BAAOC,SAAUP,EAAMQ,aAAcC,KAAK,OAAOC,MAAOV,EAAMU,QAC9D,4BAAQN,GAAG,cAAcF,QAASF,EAAMW,SACtC,wCCgDOC,MAnDf,WAAgB,MAAD,EACqBC,mBAAS,IAD9B,mBACNC,EADM,KACKC,EADL,OAEaF,mBAAS,IAFtB,mBAENG,EAFM,KAECC,EAFD,KAgBb,SAASC,EAAWd,GAClBa,EAAUE,GACDA,EAAUC,OAAO,CAACC,EAAMC,IACtBA,IAAUlB,IAMvB,OACE,yBAAKE,UAAU,aACb,yBAAKA,UAAU,WACb,2CAEF,kBAAC,EAAD,CACEK,QAtBN,WACEM,EAAUE,GACD,IAAIA,EAAWL,IAExBC,EAAa,KAmBTP,aA5BN,SAAsBe,GACpB,MAAMC,EAAWD,EAAME,OAAOf,MAC9BK,EAAaS,IA2BTd,MAAOI,IAET,6BACE,4BACGE,EAAMU,IAAI,CAACC,EAAUL,IACpB,kBAAC,EAAD,CACEM,IAAKN,EACLlB,GAAIkB,EACJrB,KAAM0B,EACNxB,UAAWe,SC1CzBW,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.e3ce928a.chunk.js","sourcesContent":["import React from \"react\";\nimport RemoveCircleOutlineIcon from '@material-ui/icons/RemoveCircleOutline';\nfunction ToDoItem(props) {\n  return (\n    <div>\n      <li>{props.text}\n      <RemoveCircleOutlineIcon\n          onClick={() => {\n            props.onChecked(props.id);\n          }}\n      />\n      </li>\n      \n    </div>\n  );\n}\n\nexport default ToDoItem;\n","import React from \"react\";\n\nfunction InputArea(props) {\n  return (\n    <div className=\"form\">\n      <input onChange={props.handleChange} type=\"text\" value={props.value} />\n      <button id=\"buttonFocus\" onClick={props.addItem}>\n        <span>Add</span>\n      </button>\n    </div>\n  );\n}\n\nexport default InputArea;\n","import React, { useState } from \"react\";\nimport ToDoItem from \"./ToDoItem\";\nimport InputArea from \"./InputArea\";\n\nfunction App() {\n  const [inputText, setInputText] = useState(\"\");\n  const [items, setItems] = useState([]);\n\n  function handleChange(event) {\n    const newValue = event.target.value;\n    setInputText(newValue);\n  }\n\n  function addItem() {\n    setItems((prevItems) => {\n      return [...prevItems, inputText];\n    });\n    setInputText(\"\");\n  }\n\n  function deleteItem(id) {\n    setItems((prevItems) => {\n      return prevItems.filter((item, index) => {\n        return index !== id;\n      });\n    });\n  }\n \n  \n  return (\n    <div className=\"container\">\n      <div className=\"heading\">\n        <h1>To-Do List</h1>\n      </div>\n      <InputArea\n        addItem={addItem}\n        handleChange={handleChange}\n        value={inputText}\n      />\n      <div>\n        <ul>\n          {items.map((todoItem, index) => (\n            <ToDoItem\n              key={index}\n              id={index}\n              text={todoItem}\n              onChecked={deleteItem}\n            />\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n//CHALLENGE: I have extracted the Input Area, including the <input> and\n//<button> elements into a seperate Component called InputArea.\n//Your job is to make the app work as it did before but this time with the\n//InputArea as a seperate Component.\n\n// DO NOT: Modify the ToDoItem.jsx\n// DO NOT: Move the input/button elements back into the App.jsx\n\n//Hint 1: You will need to think about how to manage the state of the input element\n//in InputArea.jsx.\n//Hint 2: You will need to think about how to pass the input value back into\n//the addItem() function in App.jsx.\n"],"sourceRoot":""}